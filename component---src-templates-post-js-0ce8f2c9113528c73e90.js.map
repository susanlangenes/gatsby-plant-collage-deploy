{"version":3,"sources":["webpack:///./src/templates/post.js"],"names":["BlogPostTemplate","content","categories","tags","title","date","author","className","dangerouslySetInnerHTML","__html","style","marginTop","to","slug","name","length","map","category","key","tag","BlogPost","post","data","wordpressPost","pageQuery"],"mappings":"+QAMaA,EAAmB,SAAC,GAO1B,IANLC,EAMI,EANJA,QACAC,EAKI,EALJA,WACAC,EAII,EAJJA,KACAC,EAGI,EAHJA,MACAC,EAEI,EAFJA,KACAC,EACI,EADJA,OAEA,OACE,6BAASC,UAAU,WACjB,yBAAKA,UAAU,qBACb,yBAAKA,UAAU,WACb,yBAAKA,UAAU,4BACb,wBAAIA,UAAU,sDACXH,GAEH,yBAAKI,wBAAyB,CAAEC,OAAQR,KACxC,yBAAKS,MAAO,CAAEC,UAAU,SACtB,2BACGN,EADH,eACqB,IACnB,kBAAC,IAAD,CAAMO,GAAE,WAAaN,EAAOO,MAASP,EAAOQ,OAE7CZ,GAAcA,EAAWa,OACxB,6BACE,0CACA,wBAAIR,UAAU,WACXL,EAAWc,KAAI,SAAAC,GAAQ,OACtB,wBAAIC,IAAQD,EAASJ,KAAd,OACL,kBAAC,IAAD,CAAMD,GAAE,eAAiBK,EAASJ,KAA1B,KACLI,EAASH,YAMlB,KACHX,GAAQA,EAAKY,OACZ,6BACE,oCACA,wBAAIR,UAAU,WACXJ,EAAKa,KAAI,SAAAG,GAAG,OACX,wBAAID,IAAQC,EAAIN,KAAT,OACL,kBAAC,IAAD,CAAMD,GAAE,SAAWO,EAAIN,KAAf,KAAyBM,EAAIL,YAK3C,WAsCHM,UAxBE,SAAC,GAAc,IACPC,EADM,EAAXC,KACVC,cAER,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQnB,MAAUiB,EAAKjB,MAAV,YACb,kBAACJ,EAAD,CACEC,QAASoB,EAAKpB,QACdC,WAAYmB,EAAKnB,WACjBC,KAAMkB,EAAKlB,KACXC,MAAOiB,EAAKjB,MACZC,KAAMgB,EAAKhB,KACXC,OAAQe,EAAKf,WAcd,IAAMkB,EAAS","file":"component---src-templates-post-js-0ce8f2c9113528c73e90.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Helmet from 'react-helmet'\r\nimport { graphql, Link } from 'gatsby'\r\nimport Layout from '../components/Layout'\r\n\r\nexport const BlogPostTemplate = ({\r\n  content,\r\n  categories,\r\n  tags,\r\n  title,\r\n  date,\r\n  author,\r\n}) => {\r\n  return (\r\n    <section className=\"section\">\r\n      <div className=\"container content\">\r\n        <div className=\"columns\">\r\n          <div className=\"column is-10 is-offset-1\">\r\n            <h1 className=\"title is-size-2 has-text-weight-bold is-bold-light\">\r\n              {title}\r\n            </h1>\r\n            <div dangerouslySetInnerHTML={{ __html: content }} />\r\n            <div style={{ marginTop: `4rem` }}>\r\n              <p>\r\n                {date} - posted by{' '}\r\n                <Link to={`/author/${author.slug}`}>{author.name}</Link>\r\n              </p>\r\n              {categories && categories.length ? (\r\n                <div>\r\n                  <h4>Categories</h4>\r\n                  <ul className=\"taglist\">\r\n                    {categories.map(category => (\r\n                      <li key={`${category.slug}cat`}>\r\n                        <Link to={`/categories/${category.slug}/`}>\r\n                          {category.name}\r\n                        </Link>\r\n                      </li>\r\n                    ))}\r\n                  </ul>\r\n                </div>\r\n              ) : null}\r\n              {tags && tags.length ? (\r\n                <div>\r\n                  <h4>Tags</h4>\r\n                  <ul className=\"taglist\">\r\n                    {tags.map(tag => (\r\n                      <li key={`${tag.slug}tag`}>\r\n                        <Link to={`/tags/${tag.slug}/`}>{tag.name}</Link>\r\n                      </li>\r\n                    ))}\r\n                  </ul>\r\n                </div>\r\n              ) : null}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nBlogPostTemplate.propTypes = {\r\n  content: PropTypes.node.isRequired,\r\n  title: PropTypes.string,\r\n}\r\n\r\nconst BlogPost = ({ data }) => {\r\n  const { wordpressPost: post } = data\r\n\r\n  return (\r\n    <Layout>\r\n      <Helmet title={`${post.title} | Blog`} />\r\n      <BlogPostTemplate\r\n        content={post.content}\r\n        categories={post.categories}\r\n        tags={post.tags}\r\n        title={post.title}\r\n        date={post.date}\r\n        author={post.author}\r\n      />\r\n    </Layout>\r\n  )\r\n}\r\n\r\nBlogPost.propTypes = {\r\n  data: PropTypes.shape({\r\n    markdownRemark: PropTypes.object,\r\n  }),\r\n}\r\n\r\nexport default BlogPost\r\n\r\nexport const pageQuery = graphql`\r\n  fragment PostFields on wordpress__POST {\r\n    id\r\n    slug\r\n    content\r\n    date(formatString: \"MMMM DD, YYYY\")\r\n    title\r\n  }\r\n  query BlogPostByID($id: String!) {\r\n    wordpressPost(id: { eq: $id }) {\r\n      id\r\n      title\r\n      slug\r\n      content\r\n      date(formatString: \"MMMM DD, YYYY\")\r\n      categories {\r\n        name\r\n        slug\r\n      }\r\n      tags {\r\n        name\r\n        slug\r\n      }\r\n      author {\r\n        name\r\n        slug\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"sourceRoot":""}